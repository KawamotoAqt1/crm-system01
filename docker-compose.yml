version: '3.8'

services:
  # PostgreSQL データベース
  postgres:
    image: postgres:14-alpine
    container_name: crm-postgres
    environment:
      POSTGRES_DB: crm_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - crm-network
    restart: unless-stopped

  # バックエンドAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crm-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD}@postgres:5432/crm_system
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 24h
      REFRESH_TOKEN_EXPIRES_IN: 7d
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - crm-network
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/uploads

  # フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm-frontend
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - crm-network
    restart: unless-stopped

  # Nginx リバースプロキシ（本番用）
  nginx:
    image: nginx:alpine
    container_name: crm-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - crm-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  crm-network:
    driver: bridge